{"version":3,"sources":["webpack:///./src/views/AdminUsers.vue","webpack:///./src/views/AdminUsers.vue?fbcd","webpack:///./src/apis/admin.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./src/components/AdminNav.vue","webpack:///./src/components/AdminNav.vue?c69a"],"names":["class","scope","width","isLoading","users","user","key","id","email","isAdmin","currentUser","type","toggleRole","disabled","isProcessing","name","components","AdminNav","Spinner","data","computed","created","this","fetchUsers","methods","admin","get","status","Error","message","console","log","fire","icon","title","userId","update","map","render","categories","apiHelper","create","post","categoryId","put","delete","restaurants","formData","getDetail","restaurantId","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","arguments","length","undefined","to"],"mappings":"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","file":"js/chunk-958bdcfa.ce7d54fe.js","sourcesContent":["<template>\n  <div class=\"container py-5\">\n    <!-- Spinner -->\n    <spinner v-if=\"isLoading\" />\n    <template v-else>\n      <!-- AdminNav Component -->\n      <admin-nav />\n\n      <table class=\"table table-striped\">\n        <thead class=\"table-dark\">\n          <tr>\n            <th scope=\"col\">\n              #\n            </th>\n            <th scope=\"col\">\n              Email\n            </th>\n            <th scope=\"col\">\n              Role\n            </th>\n            <th scope=\"col\" width=\"140\">\n              Action\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"user in users\" :key=\"user.id\">\n            <th scope=\"row\">\n              {{ user.id }}\n            </th>\n            <td>{{ user.email }}</td>\n            <td v-if=\"user.isAdmin\">admin</td>\n            <td v-else>user</td>\n            <td>\n              <button\n                v-if=\"user.isAdmin && user.id !== currentUser.id\"\n                type=\"button\"\n                class=\"btn btn-link\"\n                @click.prevent.stop=\"toggleRole(user.id)\"\n                :disabled=\"isProcessing\"\n              >\n                set as user\n              </button>\n              <button\n                v-else-if=\"!user.isAdmin\"\n                type=\"button\"\n                class=\"btn btn-link\"\n                @click.prevent.stop=\"toggleRole(user.id)\"\n                :disabled=\"isProcessing\"\n              >\n                set as admin\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport AdminNav from '@/components/AdminNav.vue';\nimport Spinner from '../components/Spinner.vue';\nimport adminAPI from '../apis/admin';\nimport { Toast } from '../utils/helpers';\n\nexport default {\n  name: 'AdminUsers',\n  components: {\n    AdminNav,\n    Spinner\n  },\n  data() {\n    return {\n      users: [],\n      isProcessing: false,\n      isLoading: true\n    };\n  },\n  computed: {\n    ...mapState(['currentUser'])\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        this.isLoading = true;\n        const { data } = await adminAPI.users.get();\n\n        if (data.status !== 'success') {\n          throw new Error(data.message);\n        }\n\n        this.users = data.users;\n        this.isLoading = false;\n      } catch (err) {\n        this.isLoading = false;\n        console.log(err);\n        Toast.fire({\n          icon: 'error',\n          title: 'Unable to get users data, please try again later.'\n        });\n      }\n    },\n    async toggleRole(userId) {\n      try {\n        const { data } = await adminAPI.users.update({ userId });\n\n        if (data.status !== 'success') {\n          this.isProcessing = false;\n          if (data.status === 'error') {\n            return Toast.fire({\n              icon: 'error',\n              title: data.message\n            });\n          }\n          throw new Error(data.message);\n        }\n\n        this.users = this.users.map(user => {\n          if (user.id === userId) {\n            return {\n              ...user,\n              isAdmin: !user.isAdmin\n            };\n          }\n          return user;\n        });\n\n        return null;\n      } catch (err) {\n        this.isProcessing = false;\n        console.log(err);\n        return Toast.fire({\n          icon: 'error',\n          title: 'Unable to update user data, please try again later.'\n        });\n      }\n    }\n  }\n};\n</script>\n","import { render } from \"./AdminUsers.vue?vue&type=template&id=80d918fe\"\nimport script from \"./AdminUsers.vue?vue&type=script&lang=js\"\nexport * from \"./AdminUsers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { apiHelper } from '../utils/helpers';\n\nexport default {\n  categories: {\n    get() {\n      return apiHelper.get('/admin/categories');\n    },\n    create({ name }) {\n      return apiHelper.post('/admin/categories', { name });\n    },\n    update({ categoryId, name }) {\n      return apiHelper.put(`/admin/categories/${categoryId}`, { name });\n    },\n    delete({ categoryId }) {\n      return apiHelper.delete(`/admin/categories/${categoryId}`);\n    }\n  },\n  restaurants: {\n    create({ formData }) {\n      return apiHelper.post('/admin/restaurants', formData);\n    },\n    get() {\n      return apiHelper.get('/admin/restaurants');\n    },\n    getDetail({ restaurantId }) {\n      return apiHelper.get(`/admin/restaurants/${restaurantId}`);\n    },\n    update({ restaurantId, formData }) {\n      return apiHelper.put(`/admin/restaurants/${restaurantId}`, formData);\n    },\n    delete({ restaurantId }) {\n      return apiHelper.delete(`/admin/restaurants/${restaurantId}`);\n    }\n  },\n  users: {\n    get() {\n      return apiHelper.get('/admin/users');\n    },\n    update({ userId }) {\n      return apiHelper.put(`/admin/users/${userId}`, null);\n    }\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","<template>\n  <div class=\"mb-3\">\n    <h1>Admin Backend</h1>\n    <router-link :to=\"{ name: 'admin-restaurants' }\">Restaurants</router-link> |\n    <router-link :to=\"{ name: 'admin-categories' }\">Categories</router-link> |\n    <router-link :to=\"{ name: 'admin-users' }\">Users</router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AdminNav'\n};\n</script>\n","import { render } from \"./AdminNav.vue?vue&type=template&id=31f4d4b8\"\nimport script from \"./AdminNav.vue?vue&type=script&lang=js\"\nexport * from \"./AdminNav.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}